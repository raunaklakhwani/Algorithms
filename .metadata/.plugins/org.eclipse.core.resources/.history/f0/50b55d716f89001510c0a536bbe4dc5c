'''
7 3
7654321
'''


from math import ceil
from heapq import heappush, heappop

class Node:
    def __init__(self, index, data, isValid):
        self.index = index
        self.data = data
        self.isValid = isValid

N, K = map(int, raw_input().split())
li = map(int, list(raw_input()))
print li

heap = []

h = {}
for i in xrange(N):
    node = Node(i, li[i], True)
    heappush(heap, (li[i], node))
    h[i] = node

res = []
start = end = None
while True:
    data, node = heappop(heap)
    if node.isValid:
        x = int(ceil(N / float(K)))
        if node.index + x - 1 < len(li):
            ans = ""
            start = node.index
            end = node.index + x - 1
            for y in xrange(node.index, node.index + x):
                h[y].isValid = False
                ans += str(h[y].data)
        else:
            ans = ""
            start = node.index
            for y in xrange(node.index, len(li)):
                h[y].isValid = False
                ans += str(h[y].data)
            rem = node.index + x - 1 - len(li)
            for y in xrange(rem + 1):
                h[y].isValid = False
                ans += str(h[y].data)
            end = rem
                
            
                
        res.append(int(ans))
        print ans
        K -= 1
        N -= x
        
        x = int(ceil(N / float(K)))
        
            
    else:
        continue
    
print res
    










