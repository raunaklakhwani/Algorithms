# URL : http://www.geeksforgeeks.org/custom-tree-problem/

class Node:
    def __init__(self, data, left, right):
        self.data = data
        self.left = left
        self.right = right

def getTreeUsingInorderPreorderUtil(inorder, preorder, ins, ine, pres, pree):
    if ins > ine:
        return None
    elif ins == ine:
        return Node(inorder[ins],None,None)
    else:
        node = Node(preorder[pres],None,None)
        index = inorder.index(preorder[pres])
        
        

def getTreeUsingInorderPreorder(inorder, preorder):
    if len(inorder):
        return getTreeUsingInorderPreorderUtil(inorder, preorder, 0, len(inorder) - 1, 0, len(preorder) - 1)
        

def inorder(root):
    if root is not None:
        inorder(root.left)
        print root.data,
        inorder(root.right)


if __name__ == '__main__':
    inorder = [4, 2, 5, 1, 3, 6]
    preorder = [1, 2, 4, 5, 3, 6]
    root = getTreeUsingInorderPreorder(inorder, preorder)
    inorder(root)
    
    
