'''
2
3 1000
1000
0 0
0 1
0 3
3 1000
1000
1 0
1 1
1 2
'''

from pprint import pprint
def manhattan(x1, y1, x2, y2):
    return abs(x1 - x2) + abs(y1 - y2)

def dfs(graph, visited, a, x, y, N):
    
    for i in xrange(N):
        if not visited[i] and graph[x][i] > 0:
            visited[i] = True
            dfs(graph, visited, a, x, i, N)
            visited[i] = False
            
            
    
    
    print

for _ in xrange(input()):
    N, d = map(int, raw_input().split())
    a = [0] + map(int, raw_input().split()) + [0]
    
    coords = []
    graph = [[0] * N for i in xrange(N)]
    for i in xrange(N):
        x, y = map(int, raw_input().split())
        
        j = len(coords) - 1
        while j >= 0:
            x1, y1 = coords[j]
            dist = manhattan(x, y, x1, y1)
            graph[i][j] = dist
            graph[j][i] = dist
            j = j - 1
        coords.append((x, y))
    
    pprint(graph)
    
    
    
    
    
    
