from heapq import heappush,heappop
def recurse(s1,s2,i,li):
    if i == len(li):
        return True
    elif s1 + li[i] > G and s2 + li[i] > G:
        return False
    elif s1 + li[i] > G:
        recurse(s1, s2 + li[i], i+ 1, li)
    elif s2 + li[i] > G:
        recurse(s1 + li[i], s2, i+ 1, li)
    else:
        a = recurse(s1, s2 + li[i], i+ 1, li)
        b = recurse(s1 + li[i], s2, i+ 1, li)
        return a or b
    
    
for _ in xrange(input()):
    N,G = map(int,raw_input().split())
    li = map(int,raw_input().split())
    li.sort(reverse = True)
    s1 = s2 = 0
    recurse(s1, s2, 0, li)
        
        
        
    
    
            
    
    
        
        
        