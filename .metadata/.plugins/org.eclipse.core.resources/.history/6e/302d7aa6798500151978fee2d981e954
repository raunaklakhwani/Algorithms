'''
1
3 3 2
1 2
2 3
3 1

1
4 5 3
1 2
2 4
3 4
1 4
1 3
'''

def isValid(adj,color,index,currColor):
    for i in adj[index]:
        if color[i] == currColor:
            return False
    return True
    

def dfs(adj,color,Q,source):
    print color,source
    if source == len(adj):
        return True
    
    for n in adj[source]:
        if color[n] == -1:
            for c in xrange(Q):
                if c!= color[source]:
                    color[n] = c 
                    res = dfs(adj,color,Q,n)
                    if not res:
                        color[n] = -1
                    else:
                        break
        elif color[n] == color[source]:
            return False
    else:
        return True
        
    return False


    
for _ in xrange(input()):
    N,M,Q = map(int,raw_input().split())
    
    adj = [[] * N for _ in xrange(N)]
    
    for _ in xrange(M):
        a,b = map(int,raw_input().split())
        adj[a-1].append(b-1)
        adj[b-1].append(a-1)
        
    color = [-1] * N
    
    color[0] = 0
    result = dfs(adj,color,Q,0)
    if result:
        print True
    else:
        print False
    
    
        
    
    
    
    
    