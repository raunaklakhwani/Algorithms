#===============================================================================
# def  maximum_minimum(arr, m):
#     maximum(arr, m, 0, 0)
#     print m1
#     minimum(arr, m, 0, 0)
#     print m2
#     
#     
# 
# m1 = float("-inf")
# def maximum(arr,m,index,su):
#     global m1
#     if index >= len(arr):
#         m1 = max(m1,su)
#     else:
#         maximum(arr,m,index + 1,su)
#         maximum(arr,m,index + m + 1,su + arr[index])
#         
#         
# m2 = float("inf")
# def minimum(arr,m,index,su):
#     global m2
#     if index >= len(arr):
#         m2 = min(m2,su)
#     else:
#         minimum(arr,m,index + 1,su)
#         minimum(arr,m,index + m + 1,su + arr[index])
#===============================================================================
        

def  maximum_minimum(arr, m):
    myMaximum(arr, m)
    m1 = maximum(arr, m, 0, {})
    print m1
    m2 = minimum(arr, m, 0, {})
    print m2
    
 

def getMaxMin(li,iinc,einc):
    N = einc - iinc  + 1
    
    if N & 1 == 0:
        m1 = max(li[iinc],li[iinc+1])
        m2 = min(li[iinc],li[iinc+1])
        start = i + 2
    else:
        m1 = m2 = li[iinc]
        start = i + 1
        
        
        
    
        
    
    
    
    
    print    


def myMaximum(arr,m):
    N = len(arr)
    temp = [float("-inf")] * len(arr)
    temp[-1] = arr[-1] if arr[-1] > 0 else 0
    
    temp1 = [float("inf")] * len(arr)
    temp1[-1] = arr[-1] if arr[-1] < 0 else 0
    
    for i in xrange(len(arr) - 2,-1,-1):
        inc = arr[i] + (temp[i + m + 1] if (i + m + 1) < N else 0)
        exc = max(temp[i+1:i+m+1])
        temp[i] = max(inc,exc)
        
        inc1 = arr[i] + (temp1[i + m + 1] if (i + m + 1) < N else 0)
        exc1 = min(temp1[i+1:i+m+1])
        temp1[i] = min(inc1,exc1)
        
        
        
    print temp,temp1
        
    return temp[0]
        
        
        
    
    
     

def maximum(arr,m,index,cache):
    if cache.get(index) is not None:
        return cache[index]
    elif index >= len(arr):
        return 0
    else:
        x = maximum(arr,m,index + 1,cache)
        y = arr[index] + maximum(arr,m,index + m + 1,cache)
        cache[index] = max(x,y)
        return cache[index]
        
        
def minimum(arr,m,index,cache):
    if cache.get(index) is not None:
        return cache[index]
    elif index >= len(arr):
        return 0
    else:
        x = minimum(arr,m,index + 1,cache)
        y = arr[index] + maximum(arr,m,index + m + 1,cache)
        cache[index] = min(x,y)
        return cache[index]
        
    
    
    


if __name__ == '__main__':
    print
    
    
    #maximum_minimum([5, 8, 3, 1, 5, 7], 2)
    maximum_minimum([-1,-2,1,3,7], 1)
