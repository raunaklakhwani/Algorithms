'''
2
2 4 1
2 1 -2 -1
3 3
-2 1
1 3 1
1 -1 -2
-2 2
'''


def getResult():
    print
        


def recurse(B,H,E,bal,velo,curr):
    if curr == B:
        return 
    if bal[curr][0] > 0 and velo[curr] < 0:
        print "good"
        for i in xrange(bal[curr][1],H):
            if i - bal[curr][1] > E:
                break
            else:
                if velo[i] < 0:
                    bal[curr][1] = i
                    diff = i - bal[curr][1]
                    recurse(B,H,E - diff,bal,velo,curr + 1)
                    bal[curr][1] = i
                    
        for i in xrange(bal[curr][1],-1,-1):
            if abs(i - bal[curr][1]) > E:
                break
            else:
                if velo[i] < 0:
                    bal[curr][1] = i
                    diff = abs(i - bal[curr][1])
                    recurse(B,H,E - diff,bal,velo,curr + 1)
                    bal[curr][1] = i
        
    elif bal[curr][0] < 0 and velo[curr] > 0:
        
        for i in xrange(bal[curr][1],H):
            if abs(i - bal[curr][1]) > E:
                break
            else:
                if velo[i] > 0:
                    bal[curr][1] = i
                    diff = abs(i - bal[curr][1])
                    recurse(B,H,E - diff,bal,velo,curr + 1)
                    bal[curr][1] = i
        for i in xrange(bal[curr][1],-1,-1):
            if abs(i - bal[curr][1]) > E:
                break
            else:
                if velo[i] > 0:
                    bal[curr][1] = i
                    diff = abs(i - bal[curr][1])
                    recurse(B,H,E - diff,bal,velo,curr + 1)
                    bal[curr][1] = i
                    
        
        
        print "good"
    elif bal[curr][0] < 0 and velo[curr] < 0:
        
        
        
        
        
        print "bad"
    print    
    
    

if __name__ == '__main__':
    with open("fourth.txt", "w+") as f:
        for t in xrange(input()):
            
            
            B,H,E = map(int,raw_input().split())
            velo = map(int,raw_input().split())
            
            bal = []
            for i in xrange(B):
                bal.append(map(int,raw_input().split()))
                
            
            
                
            
            
            
            result = getResult()
            
            out = "Case #" + str(t + 1) + ": " + result + "\n"
            f.write(out)